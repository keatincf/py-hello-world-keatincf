name: build

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - "main"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Markdown Lint
        uses: articulate/actions-markdownlint@v1
        with:
          files: '**/*.md'
      - name: Ruff Python Lint
        uses: jpetrucciani/ruff-check@0.1.8
        with:
          path: py_hello_world_keatincf
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: false
      - name: Install Dependencies
        if: ${{ steps.cached-poetry-dependencies.outputs.cache-hit }} != 'true'
        run: poetry install --no-interaction --no-root --with=test
      - name: Install Project
        run: poetry install --no-interaction --only-root
      - name: Run tests
        run: |
          pytest test --cov=py_hello_world_keatincf
      - name: Package
        run: poetry build
      - name: Store Package
        uses: actions/upload-artifact@v4
        with:
          name: py-hello-world-keatincf-package-distributions
          path: dist/
  release:
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: ${{ github.ref_name != 'refs/heads/main' && needs.lint.result == 'success' && needs.test.result == 'success' && !startsWith(github.event.head_commit.message, 'chore(release):') }}
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: false
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/changelog
            @semantic-release/exec
            @semantic-release/git
  release-main:
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: ${{ github.ref_name == 'refs/heads/main' && needs.lint.result == 'success' && needs.test.result == 'success' && !startsWith(github.event.head_commit.message, 'chore(release):') }}
    environment:
      name: Release
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: false
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.CICD }}
        with:
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/changelog
            @semantic-release/exec
            @semantic-release/git

